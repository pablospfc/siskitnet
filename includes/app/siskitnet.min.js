var sisKitnetApp =  angular.module('sisKitnet-App',[
    'idf.br-filters',
    'ngRoute',
    'ngMessages',
    'angularModalService',
    'ui.utils.masks',
    'ngPrint'
]);
// $scope.today = new Date();
// $scope.todayString = $filter('date')(new Date(), 'dd-MM-yyyy');
// console.log($scope.todayString);

sisKitnetApp.directive('cpfValido', function () {
    return {
        restrict: 'A',
        require: 'ngModel',
        link: function (scope, elem, attrs, ctrl) {

            scope.$watch(attrs.ngModel, function () {

                if (elem[0].value.length == 0)
                    ctrl.$setValidity('cpfValido', true);
                else if (elem[0].value.length < 11) {
                    //aplicar o algoritmo de validação completo do CPF
                    ctrl.$setValidity('cpfValido', false);
                }
                else ctrl.$setValidity('cpfValido', true);
            });
        }
    };
});

sisKitnetApp.directive('stringToNumber', function() {
    return {
        require: 'ngModel',
        link: function (scope, element, attrs, ngModel) {
            ngModel.$parsers.push(function (value) {
                return '' + value;
            });
            ngModel.$formatters.push(function (value) {
                return parseFloat(value);
            });
        }
    }
});

sisKitnetApp.config(["$routeProvider", "$locationProvider", function($routeProvider, $locationProvider) {
    $locationProvider.html5Mode( { enabled : false, requireBase : false } );
    $locationProvider.hashPrefix('');
    $routeProvider.when('/', {
        templateUrl: 'templates/view/home/index.html',
        controller: 'HomeController'
    }).
    when('/locatarios', {
        templateUrl: 'templates/view/locatario/index.html',
        controller: 'LocatariosController'
    }).
    when('/contratos', {
        templateUrl: 'templates/view/contrato/index.phtml',
        controller: 'ContratosController'
    }).
    when('/despesas', {
        templateUrl: 'templates/view/despesa/index.html',
        controller: 'DespesasController'
    }).
    when('/imoveis', {
        templateUrl: 'templates/view/imovel/index.html',
        controller: 'ImoveisController'
    }).
    when('/indenizacoes', {
        templateUrl: 'templates/view/indenizacao/index.html',
        controller: 'IndenizacoesController'
    }).
    when('/pagamentos', {
        templateUrl: 'templates/view/pagamento/index.html',
        controller: 'PagamentosController'
    }).
    when('/relatorios', {
        templateUrl: 'templates/view/relatorio/index.html',
        controller: 'RelatoriosController'
    }).
    when('/perfis', {
        templateUrl: 'templates/view/perfil/index.html',
        controller: 'PerfisController'
    }).
    when('/usuarios', {
        templateUrl: 'templates/view/usuario/index.html',
        controller: 'UsuariosController'
    })
    .otherwise ({ redirectTo: '/' });

}]);

sisKitnetApp.controller('ContratosController', ["$scope", "$document", "$timeout", "ModalService", "SiskitnetService", function ($scope, $document, $timeout, ModalService, SiskitnetService) {
    var successGetContratos = function(success) {
        $scope.contratos = success.data;
        $scope.haveError  = false;
    };

    var errorGetContratos = function(data) {
        $scope.contratos = [];
        $scope.haveError  = data ;
    };

    SiskitnetService.getContratos(successGetContratos,errorGetContratos);

    $scope.deleteContrato = function(idLocatario) {
        bootbox.confirm("Você deseja realmente excluir este contrato?", function(result) {
            if(result) {
                SiskitnetService.excluirContrato(idContrato);
            }
            $timeout(function () {
                //$window.location.reload();
                SiskitnetService.getContratos(successGetContratos,errorGetContratos)
            }, 1000);
        });
    };


    $scope.showContratoModal = function (contrato) {
        ModalService.showModal({
            templateUrl: 'templates/view/contrato/create.html',
            controller: "contratoModalController",
            inputs: {
                contrato : contrato,
            }
        }).then(function (modal) {
            modal.element.modal();
            modal.close.then(function (result) {
                SiskitnetService.getContratos(successGetContratos,errorGetContratos);
                angular.element('.modal-backdrop').hide();
                angular.element($document[0].body).removeClass('modal-open');
                $timeout(function () {
                    $scope.flashMessage = false;
                }, 2000);
            });
        });
    };
}]);

sisKitnetApp.controller('contratoModalController', ["$scope", "close", "$filter", "contrato", "SiskitnetService", function ($scope, close, $filter, contrato, SiskitnetService) {

    var getFromArray = function(array,id) {
        var result = $.grep(array, function(e){ return e.id == id; });
        return result[0];
    };

    if(!angular.isUndefined(contrato)) {
        $scope.contrato = angular.copy(contrato);
        $scope.contrato.data_inicio =  $filter('date')($scope.contrato.data_inicio, 'dd/MM/yyyy');
        $scope.contrato.primeiro_vencimento =  $filter('date')($scope.contrato.primeiro_vencimento, 'dd/MM/yyyy');
    }

    var successGetImoveis = function(success) {
        $scope.listImoveis = success.data;
        $scope.haveError  = false;
        if (!angular.isUndefined($scope.contrato)){
            $scope.contrato.id_imovel = getFromArray($scope.listImoveis,$scope.contrato.id_imovel);
        }
    };

    var errorGetImoveis = function(data) {
        $scope.listImoveis = [];
        $scope.haveError  = data ;
    };

    var successGetLocatarios = function(success) {
        $scope.listLocatarios = success.data;
        $scope.haveError  = false;
        if (!angular.isUndefined($scope.contrato)){
            $scope.contrato.id_locatario = getFromArray($scope.listLocatarios,$scope.contrato.id_locatario);
        }
    };

    var errorGetLocatarios = function(data) {
        $scope.listLocatarios = [];
        $scope.haveError  = data ;
    };

    var successPostContrato = function(response) {
        if (response.data.status) {
            $scope.alert = {type: "success", title: "Parabéns!", message: response.data.message};
            $scope.contrato = undefined;
        }
        else
            $scope.alert = {type: "danger", title: "Ocorreu um problema!", message: response.data.message};
    };
    var errorPostContrato = function(response) {
        $scope.alert = {type: "danger", title: "Ocorreu um problema!", message: response.statusText};
    };

    SiskitnetService.getImoveis(successGetImoveis,errorGetImoveis);
    SiskitnetService.getLocatarios(successGetLocatarios,errorGetLocatarios);

    $scope.fechar = function(result) {
        close(result, 200);
    };

    $scope.salvarContrato = function() {

        $scope.contrato.id_imovel = $scope.contrato.id_imovel.id;
        $scope.contrato.id_locatario = $scope.contrato.id_locatario.id;
        this.tratarData();
        console.log($scope.contrato);
        if (angular.isUndefined(contrato))
            SiskitnetService.inserirContrato($scope.contrato,successPostContrato, errorPostContrato)
        else
            SiskitnetService.atualizarContrato($scope.contrato,successPostContrato, errorPostContrato)

    };

    $scope.tratarData = function() {
        if (angular.isDate($scope.contrato.primeiro_vencimento)) {
            $scope.contrato.primeiro_vencimento = $filter('date')($scope.contrato.primeiro_vencimento, 'yyyy-MM-dd');
            var dateChanged = $scope.contrato.primeiro_vencimento.replace(/\//g, "-");
            $scope.contrato.primeiro_vencimento = $filter('date')(dateChanged, 'yyyy-MM-dd');
        }else
            $scope.contrato.primeiro_vencimento = $scope.contrato.primeiro_vencimento.split("/").reverse().join("-");

        if (angular.isDate($scope.contrato.data_inicio)) {
            $scope.contrato.data_inicio = $filter('date')($scope.contrato.data_inicio, 'yyyy-MM-dd');
            var dateChanged = $scope.contrato.data_inicio.replace(/\//g, "-");
            $scope.contrato.data_inicio = $filter('date')(dateChanged, 'yyyy-MM-dd');
        }else
            $scope.contrato.data_inicio = $scope.contrato.data_inicio.split("/").reverse().join("-");

    }


}]);

sisKitnetApp.controller('DespesasController', ["$scope", "$document", "$timeout", "ModalService", "SiskitnetService", function ($scope, $document, $timeout, ModalService, SiskitnetService) {
    var successGetDespesas = function(success) {
        $scope.despesas = success.data;
        $scope.haveError  = false;
    };

    var errorGetDespesas = function(data) {
        $scope.despesas = [];
        $scope.haveError  = data ;
    };

    SiskitnetService.getDespesas(successGetDespesas,errorGetDespesas);

    $scope.deleteDespesa = function(idDespesa) {
        bootbox.confirm("Você deseja realmente excluir este imóvel?", function(result) {
            if(result) {
                SiskitnetService.excluirDespesa(idDespesa);
            }
            $timeout(function () {
                SiskitnetService.getDespesas(successGetDespesas,errorGetDespesas)
            }, 1000);
        });
    };

    $scope.showDespesaModal = function (despesa) {
        ModalService.showModal({
            templateUrl: 'templates/view/despesa/create.html',
            controller: "despesaModalController",
            inputs: {
                despesa : despesa,
            }
        }).then(function (modal) {
            modal.element.modal();
            modal.close.then(function (result) {
                SiskitnetService.getDespesas(successGetDespesas,errorGetDespesas)
                angular.element('.modal-backdrop').hide();
                angular.element($document[0].body).removeClass('modal-open');
                $timeout(function () {
                    $scope.flashMessage = false;
                }, 2000);
            });
        });
    };

}]);


sisKitnetApp.controller('despesaModalController', ["$scope", "close", "$filter", "despesa", "SiskitnetService", function ($scope, close, $filter, despesa, SiskitnetService) {

    var getFromArray = function(array,id) {
        var result = $.grep(array, function(e){ return e.id == id; });
        return result[0];
    };

    if(!angular.isUndefined(despesa)) {
        $scope.despesa = angular.copy(despesa);
        $scope.despesa.data =  $filter('date')($scope.despesa.data, 'dd/MM/yyyy');
    }

    var successGetTiposDespesas = function(success) {
        $scope.listTiposDespesas = success.data;
        $scope.haveError  = false;
        if (!angular.isUndefined($scope.despesa)){
            $scope.despesa.id_tipo_despesa = getFromArray($scope.listTiposDespesas,$scope.despesa.id_tipo_despesa);
        }
    };

    var errorGetTiposDespesas = function(data) {
        $scope.listTiposDespesas = [];
        $scope.haveError  = data ;
    };

    var successPostDespesa = function(response) {
        if (response.data.status) {
            $scope.alert = {type: "success", title: "Parabéns!", message: response.data.message};
            $scope.despesa = undefined;
        }
        else
            $scope.alert = {type: "danger", title: "Ocorreu um problema!", message: response.data.message};
    };
    var errorPostDespesa = function(response) {
        $scope.alert = {type: "danger", title: "Ocorreu um problema!", message: response.statusText};
    };

    SiskitnetService.getTiposDespesas(successGetTiposDespesas,errorGetTiposDespesas);

    $scope.fechar = function(result) {
        close(result, 200);
    };

    $scope.salvarDespesa = function() {
        $scope.despesa.id_tipo_despesa = $scope.despesa.id_tipo_despesa.id;
        this.tratarData();
        if (angular.isUndefined(despesa))
            SiskitnetService.inserirDespesa($scope.despesa,successPostDespesa, errorPostDespesa);
        else
            SiskitnetService.atualizarDespesa($scope.despesa,successPostDespesa, errorPostDespesa);

    };

    $scope.tratarData = function() {
        if (angular.isDate($scope.despesa.data)) {
            $scope.despesa.data = $filter('date')($scope.despesa.data, 'yyyy-MM-dd');
            var dateChanged = $scope.despesa.data.replace(/\//g, "-");
            $scope.despesa.data = $filter('date')(dateChanged, 'yyyy-MM-dd');
        }else
            $scope.despesa.data = $scope.despesa.data.split("/").reverse().join("-");

    }


}]);/**
 * Created by claud on 29/10/2017.
 */

sisKitnetApp.controller('ImoveisController', ["$scope", "$document", "$timeout", "ModalService", "SiskitnetService", function ($scope, $document, $timeout, ModalService, SiskitnetService) {
    var successGetImoveis = function(success) {
        $scope.imoveis = success.data;
        $scope.haveError  = false;
    };

    var errorGetImoveis = function(data) {
        $scope.imoveis = [];
        $scope.haveError  = data ;
    };

    SiskitnetService.getImoveis(successGetImoveis,errorGetImoveis);

    $scope.deleteImovel = function(idImovel) {
        bootbox.confirm("Você deseja realmente excluir este imóvel?", function(result) {
            if(result) {
                SiskitnetService.excluirImovel(idImovel);
            }
            $timeout(function () {
                SiskitnetService.getLocatarios(successGetImoveis,errorGetImoveis)
            }, 1000);
        });
    };

    $scope.showImovelModal = function (imovel) {
        ModalService.showModal({
            templateUrl: 'templates/view/imovel/create.html',
            controller: "imovelModalController",
            inputs: {
                imovel : imovel,
            }
        }).then(function (modal) {
            modal.element.modal();
            modal.close.then(function (result) {
                SiskitnetService.getImoveis(successGetImoveis,errorGetImoveis);
                angular.element('.modal-backdrop').hide();
                angular.element($document[0].body).removeClass('modal-open');
                $timeout(function () {
                    $scope.flashMessage = false;
                }, 2000);
            });
        });
    };

}]);


sisKitnetApp.controller('imovelModalController', ["$scope", "close", "$filter", "imovel", "SiskitnetService", function ($scope, close, $filter, imovel, SiskitnetService) {

    var getFromArray = function(array,id) {
        var result = $.grep(array, function(e){ return e.id == id; });
        return result[0];
    };

    if(!angular.isUndefined(imovel)) {
        $scope.imovel = angular.copy(imovel);
    }

    var successGetTiposImoveis = function(success) {
        $scope.listTiposImoveis = success.data;
        $scope.haveError  = false;
        if (!angular.isUndefined($scope.imovel)){
            $scope.imovel.id_tipo_imovel = getFromArray($scope.listTiposImoveis,$scope.imovel.id_tipo_imovel);
        }
    };

    var errorGetTiposImoveis = function(data) {
        $scope.listTiposImoveis = [];
        $scope.haveError  = data ;
    };

    var successPostImovel = function(response) {
        if (response.data.status) {
            $scope.alert = {type: "success", title: "Parabéns!", message: response.data.message};
            $scope.imovel = undefined;
        }
        else
            $scope.alert = {type: "danger", title: "Ocorreu um problema!", message: response.data.message};
    };
    var errorPostImovel = function(response) {
        $scope.alert = {type: "danger", title: "Ocorreu um problema!", message: response.statusText};
    };

    SiskitnetService.getTipoImoveis(successGetTiposImoveis,errorGetTiposImoveis);

    $scope.fechar = function(result) {
        close(result, 200);
    };

    $scope.salvarImovel = function() {
        $scope.imovel.id_tipo_imovel = $scope.imovel.id_tipo_imovel.id;
        if (angular.isUndefined(imovel))
            SiskitnetService.inserirImovel($scope.imovel,successPostImovel, errorPostImovel);
        else
            SiskitnetService.atualizarImovel($scope.imovel,successPostImovel, errorPostImovel);

    };


}]);/**
 * Created by claud on 29/10/2017.
 */

sisKitnetApp.controller('LocatariosController', ["$scope", "$document", "$timeout", "ModalService", "SiskitnetService", function ($scope, $document, $timeout, ModalService, SiskitnetService) {
    var successGetLocatarios = function(success) {
        $scope.locatarios = success.data;
        $scope.haveError  = false;
    };

    var errorGetLocatarios = function(data) {
        $scope.locatarios = [];
        $scope.haveError  = data ;
    };

    SiskitnetService.getLocatarios(successGetLocatarios,errorGetLocatarios);

    $scope.deleteLocatario = function(idLocatario) {
        bootbox.confirm("Você deseja realmente excluir este locatário?", function(result) {
            if(result) {
                SiskitnetService.excluirLocatario(idLocatario);
            }
            $timeout(function () {
                //$window.location.reload();
                SiskitnetService.getLocatarios(successGetLocatarios,errorGetLocatarios)
            }, 1000);
        });
    };

    $scope.showLocatarioModal = function (locatario) {
        ModalService.showModal({
            templateUrl: 'templates/view/locatario/create.html',
            controller: "locatarioModalController",
            inputs: {
                locatario : locatario,
            }
        }).then(function (modal) {
            modal.element.modal();
            modal.close.then(function (result) {
                SiskitnetService.getLocatarios(successGetLocatarios,errorGetLocatarios);
                angular.element('.modal-backdrop').hide();
                angular.element($document[0].body).removeClass('modal-open');
                $timeout(function () {
                    $scope.flashMessage = false;
                }, 2000);
            });
        });
    };

}]);


sisKitnetApp.controller('locatarioModalController', ["$scope", "close", "$filter", "locatario", "SiskitnetService", function ($scope, close, $filter, locatario, SiskitnetService) {

    var getFromArray = function(array,id) {
        var result = $.grep(array, function(e){ return e.id == id; });
        return result[0];
    };

    if(!angular.isUndefined(locatario)) {
        $scope.locatario = angular.copy(locatario);
         //$scope.locatario.data_nascimento = new Date($scope.locatario.data_nascimento);
        // $scope.data_nascimento.setDate($scope.data_nascimento.getDate() + 1);
        // $scope.locatario.data_nascimento = $scope.data_nascimento;

        $scope.locatario.data_nascimento =  $filter('date')($scope.locatario.data_nascimento, 'dd/MM/yyyy');
    }

    var successGetEstadosCivis = function(success) {
        $scope.listEstadosCivis = success.data;
        $scope.haveError  = false;
        if (!angular.isUndefined($scope.locatario)){
            $scope.locatario.id_estado_civil = getFromArray($scope.listEstadosCivis,$scope.locatario.id_estado_civil);
        }
    };

    var errorGetEstadosCivis = function(data) {
        $scope.listEstadosCivis = [];
        $scope.haveError  = data ;
    };

    var successPostLocatario = function(response) {
        if (response.data.status) {
            $scope.alert = {type: "success", title: "Parabéns!", message: response.data.message};
            $scope.locatario = undefined;
        }
        else
            $scope.alert = {type: "danger", title: "Ocorreu um problema!", message: response.data.message};
    };
    var errorPostLocatario = function(response) {
        $scope.alert = {type: "danger", title: "Ocorreu um problema!", message: response.statusText};
    };

    SiskitnetService.getEstadosCivis(successGetEstadosCivis,errorGetEstadosCivis);

    $scope.fechar = function(result) {
        close(result, 200);
    };

    $scope.salvarLocatario = function() {

        $scope.locatario.id_estado_civil = $scope.locatario.id_estado_civil.id;
        this.tratarData();
        if (angular.isUndefined(locatario))
            SiskitnetService.inserirLocatario($scope.locatario,successPostLocatario, errorPostLocatario);
        else
            SiskitnetService.atualizarLocatario($scope.locatario,successPostLocatario, errorPostLocatario);

    };

    $scope.tratarData = function() {
        if (angular.isDate($scope.locatario.data_nascimento)) {
            $scope.locatario.data_nascimento = $filter('date')($scope.locatario.data_nascimento, 'yyyy-MM-dd');
            var dateChanged = $scope.locatario.data_nascimento.replace(/\//g, "-");
            $scope.locatario.data_nascimento = $filter('date')(dateChanged, 'yyyy-MM-dd');
        }else
            $scope.locatario.data_nascimento = $scope.locatario.data_nascimento.split("/").reverse().join("-");

    }


}]);
sisKitnetApp.service('SiskitnetService', ["$http", "$window", "$httpParamSerializerJQLike", function ($http, $window, $httpParamSerializerJQLike) {
    /*LOCATÁRIOS*/
    this.getLocatarios = function (callbackSuccess, callbackError) {
        $http.get("locatarios/listar")
            .then(callbackSuccess, callbackError);
    };

    this.getEstadosCivis = function (success, error) {
      $http.get("estadoscivis/listar")
          .then(success,error);
    };

    this.inserirLocatario = function (data, callbackSuccess, callbackError) {
        $window.scrollTo(0, 0);
        $http.post("locatarios/cadastrar", data)
            .then(callbackSuccess, callbackError);
    };

    this.atualizarLocatario = function ( data, callbackSuccess, callbackError) {
        $window.scrollTo(0,0);
        $http.put("locatarios/atualizar", data)
            .then(callbackSuccess, callbackError);
    };

    this.excluirLocatario = function (id, callbackSuccess, callbackError) {

        var config = {
            headers: {'Content-Type': 'application/x-www-form-urlencoded'},
            data: $httpParamSerializerJQLike({
                id: id
            })
        };

        $http.delete("locatarios/remover", config)
            .then(callbackSuccess, callbackError);
    };


    //     var dt = $(params).serialize();
    //     $http({
    //         method: 'DELETE',
    //         url: 'locatarios/remover',
    //         data: $httpParamSerializerJQLike(params),
    //         headers: {'Content-Type': 'application/x-www-form-urlencoded'}
    //     }).then( callbackSuccess, callbackError );
    // };

        /* CONTRATOS*/

        this.getContratos = function (callbackSuccess, callbackError) {
            $http.get("contratos/listar")
                .then(callbackSuccess, callbackError);
        };

        this.getImoveis = function (success, error) {
            $http.get("imoveis/listar")
                .then(success,error);
        };

        this.getLocatarios = function (success, error) {
            $http.get("locatarios/listar")
                .then(success,error);
        };


        this.inserirContrato = function (data, callbackSuccess, callbackError) {
            $window.scrollTo(0, 0);
            $http.post("contratos/cadastrar", data)
                .then(callbackSuccess, callbackError);
        };

        this.atualizarContrato = function ( data, callbackSuccess, callbackError) {
            $window.scrollTo(0,0);
            $http.put("contratos/atualizar", data)
                .then(callbackSuccess, callbackError);
        };

        this.excluirContrato = function (id, callbackSuccess, callbackError) {

            var config = {
                headers: {'Content-Type': 'application/x-www-form-urlencoded'},
                data: $httpParamSerializerJQLike({
                    id: id
                })
            };

            $http.delete("contratos/remover",config)
                .then( callbackSuccess, callbackError );
       };

    /* IMOVEIS*/

    this.getListImoveis = function (callbackSuccess, callbackError) {
        $http.get("imoveis/listar")
            .then(callbackSuccess, callbackError);
    };

    this.getTipoImoveis = function (success, error) {
        $http.get("tipoimoveis/listar")
            .then(success,error);
    };

    this.inserirImovel = function (data, callbackSuccess, callbackError) {
        console.log(data);
        $http.post("imoveis/cadastrar", data)
            .then(callbackSuccess, callbackError);
    };

    this.atualizarImovel = function ( data, callbackSuccess, callbackError) {
        $window.scrollTo(0,0);
        $http.put("imoveis/atualizar", data)
            .then(callbackSuccess, callbackError);
    };

    this.excluirImovel = function (id, callbackSuccess, callbackError) {

        var config = {
            headers: {'Content-Type': 'application/x-www-form-urlencoded'},
            data: $httpParamSerializerJQLike({
                id: id
            })
        };

        $http.delete("imoveis/remover",config)
            .then( callbackSuccess, callbackError );
    };

    /* DESPESAS*/

    this.getDespesas = function (callbackSuccess, callbackError) {
        $http.get("despesa/listar")
            .then(callbackSuccess, callbackError);
    };

    this.getTiposDespesas = function (success, error) {
        $http.get("tipodespesas/listar")
            .then(success,error);
    };

    this.inserirDespesa = function (data, callbackSuccess, callbackError) {
        $http.post("despesa/cadastrar", data)
            .then(callbackSuccess, callbackError);
    };

    this.atualizarDespesa = function ( data, callbackSuccess, callbackError) {
        $window.scrollTo(0,0);
        $http.put("despesa/atualizar", data)
            .then(callbackSuccess, callbackError);
    };

    this.excluirDespesa = function (id, callbackSuccess, callbackError) {

        var config = {
            headers: {'Content-Type': 'application/x-www-form-urlencoded'},
            data: $httpParamSerializerJQLike({
                id: id
            })
        };

        $http.delete("despesa/remover",config)
            .then( callbackSuccess, callbackError );
    };
}]);
